{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","auth","firestore","SignIn","className","onClick","provider","GoogleAuthProvider","signInWithPopup","SignOut","currentUser","signOut","ChatRoom","scroll","useRef","messagesRef","collection","query","orderBy","limit","useCollectionData","idField","messages","useState","formValue","setFormValue","sendMessage","e","a","preventDefault","uid","photoURL","add","text","createdAt","FieldValue","serverTimestamp","current","scrollIntoView","behavior","map","msg","message","id","ref","onSubmit","value","onChange","target","type","ChatMessage","props","messageClass","src","App","useAuthState","user","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mSASAA,IAASC,cAAc,CACrBC,OAAQ,0CACRC,WAAY,mCACZC,UAAW,mBACXC,cAAe,+BACfC,kBAAmB,eACnBC,MAAO,8CAGT,IAAMC,EAAOR,IAASQ,OAChBC,EAAYT,IAASS,YAmB3B,IAAMC,EAAS,WAKb,OACE,qCACE,wBAAQC,UAAU,UAAUC,QANP,WACrB,IAAMC,EAAW,IAAIb,IAASQ,KAAKM,mBACnCN,EAAKO,gBAAgBF,IAIrB,iCACA,6GAKAG,EAAU,WAEd,OAAOR,EAAKS,aACR,wBAAQN,UAAU,WAAWC,QAAS,kBAAMJ,EAAKU,WAAjD,uBAIAC,EAAW,WACf,IAAMC,EAASC,mBACTC,EAAcb,EAAUc,WAAW,YACnCC,EAAQF,EAAYG,QAAQ,aAAaC,MAAM,IAErD,EAAmBC,YAAkBH,EAAO,CAACI,QAAS,OAA/CC,EAAP,oBACA,EAAkCC,qBAAlC,mBAAOC,EAAP,KAAkBC,EAAlB,KAEMC,EAAW,uCAAG,WAAMC,GAAN,mBAAAC,EAAA,6DAClBD,EAAEE,iBADgB,EAGQ5B,EAAKS,YAAvBoB,EAHU,EAGVA,IAAKC,EAHK,EAGLA,SAHK,SAKZhB,EAAYiB,IAAI,CACpBC,KAAKT,EACLU,UAAWzC,IAASS,UAAUiC,WAAWC,kBACzCN,MACAC,aATgB,OAYlBN,EAAa,IAEbZ,EAAOwB,QAAQC,eAAe,CAAEC,SAAU,WAdxB,2CAAH,sDAiBjB,OACI,qCACI,iCACCjB,GAAYA,EAASkB,KAAI,SAAAC,GAAG,OAAI,cAAC,EAAD,CAA0BC,QAASD,GAAjBA,EAAIE,OAEvD,qBAAKC,IAAK/B,OAMV,uBAAMgC,SAAUnB,EAAhB,UACE,uBAAOoB,MAAOtB,EAAWuB,SAAU,SAACpB,GAAD,OAAOF,EAAaE,EAAEqB,OAAOF,UAEhE,wBAAQG,KAAK,SAAb,2BAMNC,EAAc,SAACC,GACnB,MAA+BA,EAAMT,QAA9BT,EAAP,EAAOA,KAAMH,EAAb,EAAaA,IAAKC,EAAlB,EAAkBA,SAEZqB,EAAetB,IAAQ7B,EAAKS,YAAYoB,IAAM,OAAS,WAC7D,OACE,sBAAK1B,UAAS,kBAAagD,GAA3B,UACE,qBAAKC,IAAKtB,IACV,4BAAIE,QAIKqB,EA7Ff,WACE,MAAeC,YAAatD,GAArBuD,EAAP,oBAEA,OACA,sBAAKpD,UAAU,MAAf,UACE,mCACE,4CACA,cAAC,EAAD,OAGF,kCACCoD,EAAO,cAAC,EAAD,IAAe,cAAC,EAAD,UCpBZC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.98742277.chunk.js","sourcesContent":["import React, { useState, useRef } from 'react';\nimport './App.css';\nimport firebase from 'firebase/compat/app'\nimport 'firebase/compat/firestore'\nimport 'firebase/compat/auth'\n\nimport { useAuthState } from 'react-firebase-hooks/auth';\nimport { useCollectionData } from 'react-firebase-hooks/firestore';\n\nfirebase.initializeApp({\n  apiKey: \"AIzaSyAGrdzagGZWZDlRzLAAqD3-oYdZu7b3Zho\",\n  authDomain: \"basic-chat-a231f.firebaseapp.com\",\n  projectId: \"basic-chat-a231f\",\n  storageBucket: \"basic-chat-a231f.appspot.com\",\n  messagingSenderId: \"196538475150\",\n  appId: \"1:196538475150:web:92e1d75f8e240e24129fdf\"\n})\n\nconst auth = firebase.auth();\nconst firestore = firebase.firestore();\n\nfunction App() {\n  const [user] = useAuthState(auth);\n\n  return (\n  <div className='App'>\n    <header>\n      <h1>Basic-Chat</h1>\n      <SignOut />\n    </header>\n\n    <section>\n    {user ? <ChatRoom /> : <SignIn />}\n    </section>\n  </div>\n  );\n}\n\nconst SignIn = () => {\n  const signInWithGoogle = () => {\n      const provider = new firebase.auth.GoogleAuthProvider();\n      auth.signInWithPopup(provider);\n  }\n  return (\n    <>\n      <button className='sign-in' onClick = {signInWithGoogle}>Sign in with Google</button>\n      <p>Do NOT violate community guidelines or you will be BANNED from the chat!</p>\n    </>\n  )\n}\n\nconst SignOut = () => {\n\n  return auth.currentUser && (\n      <button className='sign-out' onClick={() => auth.signOut()}>Sign out</button>\n  )\n}\n\nconst ChatRoom = () => {\n  const scroll = useRef();\n  const messagesRef = firestore.collection('messages');\n  const query = messagesRef.orderBy('createdAt').limit(25);\n\n  const [messages] = useCollectionData(query, {idField: 'id'});\n  const [formValue, setFormValue] = useState();\n\n  const sendMessage = async(e) => {\n    e.preventDefault();\n\n    const { uid, photoURL } = auth.currentUser;\n\n    await messagesRef.add({\n      text:formValue,\n      createdAt: firebase.firestore.FieldValue.serverTimestamp(),\n      uid,\n      photoURL\n    })\n\n    setFormValue('');\n\n    scroll.current.scrollIntoView({ behavior: 'smooth' });\n\n  }\n  return (\n      <>\n          <main>\n          {messages && messages.map(msg => <ChatMessage key={msg.id} message={msg} />)}\n\n          <div ref={scroll}>\n\n          </div>\n\n          </main>\n\n          <form onSubmit={sendMessage}>\n            <input value={formValue} onChange={(e) => setFormValue(e.target.value)} />\n\n            <button type='submit'> Send </button>\n          </form>\n      </>\n  )\n}\n\nconst ChatMessage = (props) => {\n  const {text, uid, photoURL } = props.message;\n\n  const messageClass = uid === auth.currentUser.uid ? 'sent' : 'revieved';\n  return (\n    <div className={`message ${messageClass}`}>\n      <img src={photoURL} />\n      <p>{text}</p>\n    </div>\n  )}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}